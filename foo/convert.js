db.composites.insertMany([{"_id": "document", "v": {"foo": Int32(42)}},{"_id": "document-empty", "v": {}},{"_id": "document-null", "v": {"foo": null}},{"_id": "document-composite", "v": {"foo": Int32(42), "42": "foo", "array": [Int32(42), "foo", null]}},{"_id": "document-composite-reverse", "v": {"array": [Int32(42), "foo", null], "42": "foo", "foo": Int32(42)}},{"_id": "document-nested", "v": {"foo": {"document": Int32(12)}}},{"_id": "array", "v": [Int32(42)]},{"_id": "array-empty", "v": []},{"_id": "array-null", "v": [null]},{"_id": "array-composite", "v": [Double(42.130000), "foo", BinData(128, "KgAN"), ObjectId("000102030405060708091011"), true, ISODate("2021-11-01T10:18:42.123Z"), null, RegExp("foo", "i"), Int32(42), Timestamp({t: 42, i: 13}), Long(41), Decimal128("3476215962376601600.461")]},{"_id": "array-composite-reverse", "v": [Decimal128("3476215962376601600.461"), Long(41), Timestamp({t: 42, i: 13}), Int32(42), RegExp("foo", "i"), null, ISODate("2021-11-01T10:18:42.123Z"), true, ObjectId("000102030405060708091011"), BinData(128, "KgAN"), "foo", Double(42.130000)]},{"_id": "array-documents", "_comment": "An array of documents, add more documents if necessary.", "v": [{"foo": Int32(42)}, {"foo": Int32(44)}, {"bar": Int32(42)}]},{"_id": "array-document-empty", "v": [{}]},{"_id": "array-nested", "v": [["foo"]]},{"_id": "array-numbers-asc", "v": [Int32(42), Long(43), Double(45.500000), Decimal128("3476215962376601600.461")]},{"_id": "array-double-desc", "v": [Double(40.000000), Double(15.000000), Double(10.000000)]},{"_id": "array-double-duplicate", "_comment": "The first and the second elements are the same value.", "v": [Double(10.000000), Double(10.000000), Double(20.000000)]},{"_id": "array-double-max-integer", "_comment": "The array contains the largest integer value representable as a double.", "v": [Double(9007199254740991.000000)]},{"_id": "array-double-big", "_comment": "The array contains the value x such that x+1 == x.", "v": [Double(2305843009213693952.000000)]}]);
db.values.insertMany([{"_id": "double", "v": Double(42.130000)},{"_id": "double-whole", "v": Double(42.000000)},{"_id": "double-zero", "v": Double(0.000000)},{"_id": "double-negative-zero", "v": Double(-0.000000)},{"_id": "double-infinity", "v": Double(+Infinity)},{"_id": "double-negative-infinity", "v": Double(-Infinity)},{"_id": "double-nan", "v": Double(NaN)},{"_id": "double-max", "_comment": "The largest positive finite value representable as a double.", "v": Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000)},{"_id": "double-smallest-non-zero", "_comment": "The smallest positive non-zero value representable as a double.", "v": Double(0.000000)},{"_id": "double-max-integer", "_comment": "The largest integer value representable as a double.", "v": Double(9007199254740991.000000)},{"_id": "double-big", "_comment": "Value x such as x+1 == x.", "v": Double(2305843009213693952.000000)},{"_id": "string", "v": "foo"},{"_id": "string-empty", "v": ""},{"_id": "binary", "_comment": "The base64 encoded string of bytes [42, 0, 13].", "v": BinData(128, "KgAN")},{"_id": "binary-empty", "v": BinData(0, "")},{"_id": "objectid", "v": ObjectId("000102030405060708091011")},{"_id": "objectid-empty", "v": ObjectId("000000000000000000000000")},{"_id": ObjectId("000102030405060708091011"), "_comment": "_id is an ObjectID.", "v": "objectid"},{"_id": ObjectId("000000000000000000000000"), "_comment": "_id is an empty ObjectID.", "v": "objectid-empty"},{"_id": "bool-false", "v": false},{"_id": "bool-true", "v": true},{"_id": "datetime", "_comment": "The equivalent of 2021-11-01T10:18:42.123Z.", "v": ISODate("2021-11-01T10:18:42.123Z")},{"_id": "datetime-epoch", "_comment": "Unix epoch time.", "v": ISODate("1970-01-01T00:00:00Z")},{"_id": "datetime-min", "_comment": "The equivalent of 0000-01-01T00:00:00Z.", "v": ISODate("0000-01-01T00:00:00Z")},{"_id": "datetime-max", "_comment": "The equivalent of 9999-12-31T23:59:59.999Z.", "v": ISODate("9999-12-31T23:59:59.999Z")},{"_id": "null", "v": null},{"_id": "regex", "v": RegExp("foo", "i")},{"_id": "regex-empty", "v": RegExp("", "")},{"_id": "int32", "v": Int32(42)},{"_id": "int32-zero", "v": Int32(0)},{"_id": "int32-max", "v": Int32(2147483647)},{"_id": "int32-min", "v": Int32(-2147483648)},{"_id": "timestamp", "v": Timestamp({t: 42, i: 13})},{"_id": "timestamp-zero", "v": Timestamp({t: 0, i: 0})},{"_id": "timestamp-i", "v": Timestamp({t: 0, i: 1})},{"_id": "int64", "v": Long(42)},{"_id": "int64-zero", "v": Long(0)},{"_id": "int64-max", "v": Long(9223372036854775807)},{"_id": "int64-min", "v": Long(-9223372036854775808)},{"_id": "decimal128", "v": Decimal128("3475653012423180288.4213")},{"_id": "decimal128-zero", "v": Decimal128("3476215962376601600.0")},{"_id": "decimal128-negative-zero", "v": Decimal128("12699587999231377408.0")},{"_id": "decimal128-whole", "v": Decimal128("3476778912330022912.42")},{"_id": "decimal128-min", "_comment": "The smallest value representable as a decimal128.", "v": Decimal128("542101086242752.4003012203950112767")},{"_id": "decimal128-max", "_comment": "The largest value representable as a decimal128.", "v": Decimal128("6917508178773903296.4003012203950112767")},{"_id": "decimal128-infinity", "v": Decimal128("8646911284551352320.0")},{"_id": "decimal128-negative-infinity", "v": Decimal128("17870283321406128128.0")},{"_id": "decimal128-nan", "v": Decimal128("8935141660703064064.0")},{"_id": "unset"}]);
